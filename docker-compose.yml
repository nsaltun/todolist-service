services:
  # app:
  #   build: .
  #   ports:
  #     - "8080:8080"

  prometheus:
    image: prom/prometheus:latest
    ports:
      - "9090:9090"
    volumes:
      - ./deploy/prometheus/prometheus.yml:/etc/prometheus/prometheus.yml
      - prometheus_data:/prometheus
    command:
      - '--config.file=/etc/prometheus/prometheus.yml'
      - '--storage.tsdb.path=/prometheus'
      - '--web.console.libraries=/usr/share/prometheus/console_libraries'
      - '--web.console.templates=/usr/share/prometheus/consoles'

  grafana:
    image: grafana/grafana:latest
    ports:
      - "3000:3000"
    volumes:
      - grafana_data:/var/lib/grafana
      - ./deploy/grafana:/etc/grafana/provisioning/
      - ./deploy/grafana/dashboards:/var/lib/grafana/dashboards
    environment:
      - GF_SECURITY_ADMIN_PASSWORD=admin
      - GF_SECURITY_ADMIN_USER=admin
    depends_on:
      - prometheus
  
  postgres-db:
    image: postgres:16
    volumes:
      - pgdata:/var/lib/postgresql/data
    ports:
      - "5432:5432"
    healthcheck:
      test: ["CMD-SHELL", "pg_isready --username=todolist"]
      interval: 10s
      timeout: 5s
      retries: 5
    env_file: .env
    environment:
      - POSTGRES_USER=todolist
      - POSTGRES_PASSWORD=todolist.8080
      - POSTGRES_DB=todolist

  migrator:
    image: migrate/migrate:v4.17.0
    volumes:
      - ./migrations:/migrations
    depends_on:
      - postgres-db

volumes:
  prometheus_data:
  grafana_data:
  pgdata: